# serengeti bootup configurations, updated by firstboot script
serengeti.uuid = xxx-uuid

# root vm folder for all clusters will be SERENGETI-CLUSTER-${serengeti.uuid}
serengeti.root_folder_prefix = SERENGETI

# Turn on intensive checks in debug mode (including AuAssert checks)
# Note: the debug code should not have side-effect on the outside code,
# i.e. turning off debug should not leads to changes of code logic
serengeti.debug = true

# DAL transaction random rollback, i.e. deadlock simulation
# only valid when serengeti.debug = true
dal.stressTxnRollback = true

vc_datacenter = datacenter
template_id = vm-001

query_cluster.cmd = ironfan_proxy.sh query :cluster_name :json_file :log_level
create_cluster.cmd = ironfan_proxy.sh create :cluster_name :json_file :log_level
update_cluster.cmd = ironfan_proxy.sh update :cluster_name :json_file :log_level
start_cluster_node.cmd = ironfan_proxy.sh start :nodes_name :json_file :log_level
stop_cluster_node.cmd = ironfan_proxy.sh stop :nodes_name :json_file :log_level
delete_cluster.cmd = ironfan_proxy.sh destroy :cluster_name :json_file :log_level
kill_task.cmd = kill
configure_cluster.cmd = ironfan_proxy.sh configure :cluster_name :json_file :log_level


serengeti.distro_root = http://localhost/distros
serengeti.http_proxy = proxy.domain.com:3128
serengeti.no_proxy = 192.168.0.1,192.168.0.2
serengeti.no_proxy_no_comma = 192.168.0.1 192.168.0.2

# task configurations
task.enable_mq = false
task.threadpool.workers = 20
task.threadpool.queue_size = 50
task.rabbitmq.host = localhost
task.rabbitmq.port = 5672
task.rabbitmq.username =
task.rabbitmq.password =
task.rabbitmq.exchange = bddtask
task.rabbitmq.routekey_fmt = task.${task_id}
task.rabbitmq.recv_timeout_ms = 1000
task.rabbitmq.keepalive_time_ms = 5000
